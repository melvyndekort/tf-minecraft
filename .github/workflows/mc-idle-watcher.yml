name: Deploy mc-idle-watcher to GHCR

on:
  push:
    branches:
      - main
    paths:
      - 'mc-idle-watcher/**'
      - '.github/workflows/mc-idle-watcher.yml'
  pull_request:
    paths:
      - 'mc-idle-watcher/**'
      - '.github/workflows/mc-idle-watcher.yml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './mc-idle-watcher'
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: '3.12'
      - name: Install Poetry
        run: pip install poetry
      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('mc-idle-watcher/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest

  build-amd64:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v5
      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3
      - name: 'Login to GitHub Container Registry'
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build and push AMD64 Image'
        uses: docker/build-push-action@v6
        with:
          context: ./mc-idle-watcher
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/melvyndekort/mc-idle-watcher:latest-amd64
          cache-from: type=gha,scope=amd64
          cache-to: type=gha,mode=max,scope=amd64

  build-arm64:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v5
      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3
      - name: 'Login to GitHub Container Registry'
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build and push ARM64 Image'
        uses: docker/build-push-action@v6
        with:
          context: ./mc-idle-watcher
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/melvyndekort/mc-idle-watcher:latest-arm64
          cache-from: type=gha,scope=arm64
          cache-to: type=gha,mode=max,scope=arm64

  create-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Create and push manifest'
        run: |
          docker buildx imagetools create -t ghcr.io/melvyndekort/mc-idle-watcher:latest \
            ghcr.io/melvyndekort/mc-idle-watcher:latest-amd64 \
            ghcr.io/melvyndekort/mc-idle-watcher:latest-arm64
